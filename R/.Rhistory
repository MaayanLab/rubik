getwd()
getwd()
setwd("D:/Qiaonan Working/data/rubik")
tools:::httpdPort
tools:::httpdPort <- 7676L
tools:::httpdPort
require(Rook)
library(Matrix)
library(jsonlite)
s <- Rhttpd$new()
s$start(listen='127.0.0.1')
my.app <- function(env){
## Start with a table and allow the user to upload a CSV-file
req <- Request$new(env)
res <- Response$new()
res$header("Access-Control-Allow-Origin","*")
res$header("Access-Control-Allow-Methods","GET,PUT,POST,DELETE")
print('good')
print(req$POST())
#   print(parseParam(req$POST()[[1]]))
#   param <- parseParam(req$POST()[[1]])
ptm <- proc.time()
res$write('g.transform(param)')
print(proc.time()-ptm)
res$finish()
}
s$add(app=my.app, name='Rubik')
## Open a browser window and display the web app
s$browse('Rubik')
tools:::httpdPort
tools:::httpdPort
s$stop()
s
tools:::httpdPort
s <- Rhttpd$new()
s$start(listen='127.0.0.1')
my.app <- function(env){
## Start with a table and allow the user to upload a CSV-file
req <- Request$new(env)
res <- Response$new()
res$header("Access-Control-Allow-Origin","*")
res$header("Access-Control-Allow-Methods","GET,PUT,POST,DELETE")
print('good')
print(req$POST())
#   print(parseParam(req$POST()[[1]]))
#   param <- parseParam(req$POST()[[1]])
ptm <- proc.time()
res$write('g.transform(param)')
print(proc.time()-ptm)
res$finish()
}
s$add(app=my.app, name='Rubik')
## Open a browser window and display the web app
s$browse('Rubik')
